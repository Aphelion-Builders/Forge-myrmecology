// Date: 10/12/2013 11:13:07 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package vivadaylight3.myrmecology.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelAnt extends ModelBase
{
    
    ModelRenderer Node;
    ModelRenderer Gaster;
    ModelRenderer Head;
    
    ModelRenderer AntennaLeft;
    ModelRenderer AntennaRight;
    
    ModelRenderer LegLeft3Up;
    ModelRenderer LegLeft2Up;
    ModelRenderer LegLeft1Up;
    
    ModelRenderer LegRight3Up;
    ModelRenderer LegRight2Up;
    ModelRenderer LegRight1Up;
    
    ModelRenderer LegLeft3Down;
    ModelRenderer LegLeft2Down;
    ModelRenderer LegLeft1Down;
    
    ModelRenderer LegRight3Down;
    ModelRenderer LegRight2Down;
    ModelRenderer LegRight1Down;
  
  public ModelAnt()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Node = new ModelRenderer(this, 0, 5);
      Node.addBox(0F, 0F, 0F, 3, 1, 4);
      Node.setRotationPoint(-1F, 21F, -2F);
      Node.setTextureSize(64, 32);
      Node.mirror = true;
      setRotation(Node, 0F, 0F, 0F);
      Gaster = new ModelRenderer(this, 0, 0);
      Gaster.addBox(-3F, 0F, -4F, 5, 3, 4);
      Gaster.setRotationPoint(1F, 20F, -2F);
      Gaster.setTextureSize(64, 32);
      Gaster.mirror = true;
      setRotation(Gaster, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 0, 10);
      Head.addBox(-2F, 0F, 0F, 5, 1, 4);
      Head.setRotationPoint(0F, 21F, 2F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      AntennaRight = new ModelRenderer(this, 10, 15);
      AntennaRight.addBox(-1F, -3F, 0F, 1, 3, 1);
      AntennaRight.setRotationPoint(0F, 21F, 4F);
      AntennaRight.setTextureSize(64, 32);
      AntennaRight.mirror = true;
      setRotation(AntennaRight, -0.37179F, 0F, 0F);
      LegLeft3Up = new ModelRenderer(this, 2, 15);
      LegLeft3Up.addBox(0F, 0F, 0F, 1, 2, 1);
      LegLeft3Up.setRotationPoint(2F, 22F, 2F);
      LegLeft3Up.setTextureSize(64, 32);
      LegLeft3Up.mirror = true;
      setRotation(LegLeft3Up, 0F, 0F, -0.9666439F);
      AntennaLeft = new ModelRenderer(this, 2, 15);
      AntennaLeft.addBox(0F, -3F, 0F, 1, 3, 1);
      AntennaLeft.setRotationPoint(1F, 21F, 4F);
      AntennaLeft.setTextureSize(64, 32);
      AntennaLeft.mirror = true;
      setRotation(AntennaLeft, -0.3717861F, 0F, 0F);
      LegLeft2Up = new ModelRenderer(this, 2, 15);
      LegLeft2Up.addBox(0F, 0F, 0F, 1, 2, 1);
      LegLeft2Up.setRotationPoint(1F, 22F, -1F);
      LegLeft2Up.setTextureSize(64, 32);
      LegLeft2Up.mirror = true;
      setRotation(LegLeft2Up, 0F, 0F, -0.9666439F);
      LegLeft1Up = new ModelRenderer(this, 2, 15);
      LegLeft1Up.addBox(0F, 0F, 0F, 1, 2, 1);
      LegLeft1Up.setRotationPoint(2F, 22F, -4F);
      LegLeft1Up.setTextureSize(64, 32);
      LegLeft1Up.mirror = true;
      setRotation(LegLeft1Up, 0F, 0F, -0.9666439F);
      LegRight3Up = new ModelRenderer(this, 2, 15);
      LegRight3Up.addBox(-1F, 0F, 0F, 1, 2, 1);
      LegRight3Up.setRotationPoint(-1F, 22F, 2F);
      LegRight3Up.setTextureSize(64, 32);
      LegRight3Up.mirror = true;
      setRotation(LegRight3Up, 0F, 0F, 0.9665633F);
      LegRight2Down = new ModelRenderer(this, 2, 15);
      LegRight2Down.addBox(-1F, 0F, 0F, 1, 2, 1);
      LegRight2Down.setRotationPoint(-1F, 22F, -1F);
      LegRight2Down.setTextureSize(64, 32);
      LegRight2Down.mirror = true;
      setRotation(LegRight2Down, 0F, 0F, 0F);
      LegRight2Up = new ModelRenderer(this, 2, 15);
      LegRight2Up.addBox(-1F, 0F, 0F, 1, 2, 1);
      LegRight2Up.setRotationPoint(0F, 22F, -1F);
      LegRight2Up.setTextureSize(64, 32);
      LegRight2Up.mirror = true;
      setRotation(LegRight2Up, 0F, 0F, 0.9665633F);
      LegRight1Up = new ModelRenderer(this, 2, 15);
      LegRight1Up.addBox(-1F, 0F, 0F, 1, 2, 1);
      LegRight1Up.setRotationPoint(-1F, 22F, -4F);
      LegRight1Up.setTextureSize(64, 32);
      LegRight1Up.mirror = true;
      setRotation(LegRight1Up, 0F, 0F, 0.9665633F);
      LegRight1Down = new ModelRenderer(this, 2, 15);
      LegRight1Down.addBox(-1F, 0F, 0F, 1, 2, 1);
      LegRight1Down.setRotationPoint(-2F, 22F, -4F);
      LegRight1Down.setTextureSize(64, 32);
      LegRight1Down.mirror = true;
      setRotation(LegRight1Down, 0F, 0F, 0F);
      LegLeft1Down = new ModelRenderer(this, 2, 15);
      LegLeft1Down.addBox(0F, 0F, 0F, 1, 2, 1);
      LegLeft1Down.setRotationPoint(3F, 22F, -4F);
      LegLeft1Down.setTextureSize(64, 32);
      LegLeft1Down.mirror = true;
      setRotation(LegLeft1Down, 0F, 0F, 0F);
      LegRight3Down = new ModelRenderer(this, 2, 15);
      LegRight3Down.addBox(-1F, 0F, 0F, 1, 2, 1);
      LegRight3Down.setRotationPoint(-2F, 22F, 2F);
      LegRight3Down.setTextureSize(64, 32);
      LegRight3Down.mirror = true;
      setRotation(LegRight3Down, 0F, 0F, 0F);
      LegRight3Down = new ModelRenderer(this, 2, 15);
      LegRight3Down.addBox(0F, 0F, 0F, 1, 2, 1);
      LegRight3Down.setRotationPoint(3F, 22F, 2F);
      LegRight3Down.setTextureSize(64, 32);
      LegRight3Down.mirror = true;
      setRotation(LegRight3Down, 0F, 0F, 0F);
      LegLeft2Down = new ModelRenderer(this, 2, 15);
      LegLeft2Down.addBox(0F, 0F, 0F, 1, 2, 1);
      LegLeft2Down.setRotationPoint(2F, 22F, -1F);
      LegLeft2Down.setTextureSize(64, 32);
      LegLeft2Down.mirror = true;
      setRotation(LegLeft2Down, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Node.render(f5);
    Gaster.render(f5);
    Head.render(f5);
    AntennaRight.render(f5);
    LegLeft3Up.render(f5);
    AntennaLeft.render(f5);
    LegLeft2Up.render(f5);
    LegLeft1Up.render(f5);
    LegRight3Up.render(f5);
    LegRight2Down.render(f5);
    LegRight2Up.render(f5);
    LegRight1Up.render(f5);
    LegRight1Down.render(f5);
    LegLeft1Down.render(f5);
    LegRight3Down.render(f5);
    LegRight3Down.render(f5);
    LegLeft2Down.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
  }

}
