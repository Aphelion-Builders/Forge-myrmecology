package vivadaylight3.myrmecology.common;

import java.util.Arrays;

import net.minecraftforge.common.Configuration;
import vivadaylight3.myrmecology.common.handler.MyrmecologyGuiHandler;
import vivadaylight3.myrmecology.common.handler.MyrmecologyPacketHandler;
import vivadaylight3.myrmecology.common.lib.Resources;
import vivadaylight3.myrmecology.common.lib.Url;
import vivadaylight3.myrmecology.common.tileentity.TileEntityIncubator;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.Metadata;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.network.NetworkRegistry;

/**
 * Myrmecology main class
 * 
 * @author VivaDaylight3
 */

@Mod(modid = Reference.MOD_ID, name = Reference.MOD_ID, version = Reference.MOD_VERSION, dependencies = Reference.MOD_DEPENDENCIES)
@NetworkMod(channels = { Reference.MOD_CHANNEL, Reference.MOD_CHANNEL_INCUBATOR }, clientSideRequired = true, serverSideRequired = false, packetHandler = MyrmecologyPacketHandler.class)
public class Myrmecology {

    @SidedProxy(clientSide = "vivadaylight3.myrmecology.client.ClientProxy", serverSide = "vivadaylight3.myrmecology.common.CommonProxy")
    public static CommonProxy proxy;

    @Metadata
    public static ModMetadata meta;

    @Instance(Reference.MOD_ID)
    public static Myrmecology instance;

    public static boolean updateIsAvailable = false;

    @EventHandler
    public void preInit(FMLPreInitializationEvent event) {

	Log.info("Initialising config");
	Configuration config = new Configuration(
		event.getSuggestedConfigurationFile());

	Register.setConfig(config);
	
	Register.checkAntBook();

	Log.info("Getting version check URL");
	Url url = new Url(Reference.VERSION_CHECK_URL);

	// updateIsAvailable = Register.checkForUpdates(url);

	Log.info("Registering creative tab");
	Register.registerCreativeTab();

	Log.info("Registering blocks");
	Register.registerBlocks();

	Log.info("Registering items");
	Register.registerItems();

	Log.info("Registering ant breeding recipes");
	Register.registerBreeding();

	Log.info("Registering crafting recipes");
	Register.registerRecipes();

	Log.info("Registering tile entities");
	Register.registerTileEntities();

	Log.info("Registering world gen");
	Register.registerWorldGen();

	MyrmecologyGuiHandler guiHandler = new MyrmecologyGuiHandler();
	NetworkRegistry.instance().registerGuiHandler(this, guiHandler);

	MyrmecologyPacketHandler packetHandler = new MyrmecologyPacketHandler();
	NetworkRegistry.instance().registerChannel(packetHandler,
		Reference.MOD_CHANNEL);

	TileEntityIncubator packetHandler2 = new TileEntityIncubator();
	NetworkRegistry.instance().registerChannel(packetHandler2,
		Reference.MOD_CHANNEL_INCUBATOR);

	Log.info("Registering entities");
	Register.registerEntities();
	
	Log.info("Registering key bindings");
	Register.registerKeyBindings();
	
	Log.info("Registering achievements");
	Register.registerAchievements();
	
	Log.info("Registering tree dictionary");
	Register.registerTreeDictionary();

    }

    @EventHandler
    public void mainInit(FMLInitializationEvent event) {

	Register.registerRenderers();

	meta.modId = Reference.MOD_ID;
	meta.name = Reference.MOD_ID;
	meta.description = Reference.MOD_DESC;
	meta.url = Reference.MOD_URL;

	meta.logoFile = Resources.LOGO_PATH;
	meta.version = Reference.MOD_VERSION;
	meta.authorList = Arrays.asList(new String[] { "VivaDaylight3",
		"Aurliux" });
	meta.credits = "RaccoonSam for textures, MCP and Forge for their contributions to modding";
	meta.autogenerated = false;

    }

    @EventHandler
    public void postInit(FMLPostInitializationEvent event) {

    }

}
